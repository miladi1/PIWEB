security:
    encoders:
        App\Entity\Employer:
            algorithm: bcrypt
        App\Entity\Employeur:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        in_database:
            entity:
                class: App\Entity\Employer
                property: mail
        users_providers:
            entity:
                class: App\Entity\Employeur
                property: adresse
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:

            anonymous: true
            provider: in_database
            form_login:
                login_path: employer_login
                check_path: employer_login
            guard:
                authenticators:
                    - App\Security\LoginAuthenticator
                    - App\Security\LogAuthenticator
                entry_point: App\Security\LogAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
